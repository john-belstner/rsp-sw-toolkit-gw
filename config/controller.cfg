#-------------------------------------------------------------------------
#-- Controller Configuration
#--
#-- Default values used by the application are included
#-- here but commented out as reference (except for ntp)
#--
#-- Configuring Hosts:
#-- For configuration items that refer to a host,
#-- leaving that entry blank will have the effect
#-- of using the server hostname and the expectation
#-- that the corresponding service is available on
#-- the same host as the controller
#-------------------------------------------------------------------------

#-------------------------------------------------------------------------
#-- Controller
#--
# controller.device_id =
#-------------------------------------------------------------------------

#-------------------------------------------------------------------------
#-- NTP
#--
#-- ntp.server.host =
#-------------------------------------------------------------------------

#-------------------------------------------------------------------------
#-- MQTT 
#--
#-- NOTE: that supported protocols are either 'tcp' or 'ssl'
#--
#-- NOTE: if used, the 'downstream' password is also sent to
#-- the sensors and they will attempt to connect to the
#-- broker using their device id and this password.
#--
# mqtt.downstream.protocol = tcp
# mqtt.downstream.host = 
# mqtt.downstream.port = 1883
# mqtt.downstream.username = 
# mqtt.downstream.password =
#--
# mqtt.upstream.protocol = tcp
# mqtt.upstream.host =
# mqtt.upstream.port = 1883
# mqtt.upstream.username = 
# mqtt.upstream.password =
#-------------------------------------------------------------------------

#-------------------------------------------------------------------------
#-- RSP SOFTWARE PACKAGE REPO
#--
#-- The RSP is sent this information and will attempt to update itself 
#-- using the packages in this repo.
#-- NOTE: the packages must be signed by Intel to be installed. 
#--
# repo.rsp.protocol = http
# repo.rsp.host =
# repo.rsp.port = 8080
#-------------------------------------------------------------------------

#-------------------------------------------------------------------------
#-- CONSOLE
#--
#-- The ssh connection parameters used to log in to the controller CLI
#--
# console.port = 5222
# console.userid = console
# console.password = console
#-------------------------------------------------------------------------

#-------------------------------------------------------------------------
#-- INVENTORY
#--
#-- Ageout: Tags that have not been read in this amount of time
#-- will be removed from the inventory database. 
#--
# inventory.ageout.hours = 336
#--
#-- Departed: Tags that have been read by an EXIT sensor will
#-- generate a departure if they have not been read by any sensor
#-- for this amount of time
#--
# inventory.aggregate.departed.threshold.millis = 30000
#--
#-- Motion Triggered Reading: To overcome false motion sensor events,
#-- a motion triggered read cannot occur any sooner that this amoung
#-- of time after the last inventory complete.
#--
# inventory.motion.trigger.holdoff.millis = 7000
#-------------------------------------------------------------------------

#-------------------------------------------------------------------------
#-- POINT OF SALE
#--
#-- Departed: the amount of time that a tag must be in the inventory before
#-- it can depart from a POS sensor
#-- default is 1 hour (1 * 60 * 60 * 1000)
#--
# inventory.POS.departed.threshold.millis = 3600000
#--
#-- Returned: for tags that have departed by POS,
#-- this time threshold must be exceeded before the tag will be 
#-- 'returned' to inventory
#-- default is 1 day (24 * 60 * 60 * 1000)
#--
# inventory.POS.return.threshold.millis = 86400000
#-------------------------------------------------------------------------

#-------------------------------------------------------------------------
#-- PROVISIONING
#--
#-- Root CA Cert: if configured as https, the sensor uses Debian 
#-- ca cert store for authentication
#--
# provision.ca.cert.protocol = http
#--
#-- Sensor Credentials: if configured as https, the sensor authenticates
#-- this connection using the downloaded root CA
#--
# provision.sensor.credentials.protocol = https
#--
#-- Ports used by the local REST server for the certificate and credentials
#--
# provision.http.port = 8080
# provision.tls.port = 8443
#--
#-- Sensor Token:Indicates whether mutual authentication is required 
#-- between the sensor and controller upon connection.
#-- For more details, please consult the user guide.
#--
# provision.sensor.token.required = false
#
#-- password for the pcs12 java keystore
provision.keystore.password = server123store456
#-------------------------------------------------------------------------

